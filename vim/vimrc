let mapleader = " "
set nocompatible


"===============================================================================
" Options:
"===============================================================================
set background=dark
syntax on

" different color for each paren pairs
let vimclojure#ParenRainbow = 1

set path+=**
set autoindent
set autoread
set backspace=indent,eol,start
set directory=/tmp/
set display=lastline
set encoding=UTF-8
set expandtab tabstop=2 softtabstop=2 shiftwidth=2
set guicursor=a:blinkon0
set hidden
set hlsearch
set ignorecase smartcase
set laststatus=2
set list
set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
set mouse=""
set nobackup
set noincsearch
set noswapfile
set nowrap
set number numberwidth=2
set pastetoggle=<F3>
set ruler rulerformat=%=%l/%L
set novisualbell " visualbel causes some weird char when in gnome terminal
set showcmd
set showmatch
set smarttab
set splitbelow
set splitright
set tabpagemax=20
set tags+=./tags.vendors
set tags+=tags-php
set tags+=tags-ruby
set tags+=tags-js
set tags+=gems.tags
set ttyfast
set wildignore+=*.so,*.swp,*.zip,*/build/*,*/coverage/*     " MacOSX/Linux
set wildmenu
set wildmode=list:longest,full

" https://www.reddit.com/r/vim/comments/57huhd/any_idea_why_terminal_vim_isnt_correctly/
" Attempt to fix rendering
if &term =~ '256color'
  set t_ut=
endif

" Conditional settings
if exists("+undodir")
  set undodir=~/.vimundodir
  set undofile
  if filewritable(&undodir) == 0
    call mkdir(&undodir, "p")
  endif
endif

if exists("+colorcolumn")
  set colorcolumn=80
endif

if has("mac")
  set clipboard=unnamed
elseif has("unix")
  set clipboard=unnamedplus
endif

" Performance improvments
if has("mac")
  set nocursorline

  if exists("+relativenumber")
    set norelativenumber
  endif

  set foldlevel=0
  set foldmethod=manual
endif

"===============================================================================
" Autocommands:
"===============================================================================
autocmd BufWrite * :call <sid>MkdirsIfNotExists(expand("<afile>:h"))

" TODO: find out why it wont work when the function is not herer
function! <SID>MkdirsIfNotExists(directory)
  if(!isdirectory(a:directory))
    call system("mkdir -p ".shellescape(a:directory))
  endif
endfunction

" remember last position in file
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g'\"" | endif

" Thorfile, Rakefile, Vagrantfile, and Gemfile are Ruby
autocmd BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} set ft=ruby

" hb is handlebars
autocmd BufNewFile,BufRead *.hb set ai filetype=handlebars

" hbs is handlebars
autocmd BufNewFile,BufRead *.hbs set ai filetype=handlebars

" JSON is JS
autocmd BufNewFile,BufRead *.json set ai filetype=javascript

" enable spell check
autocmd FileType gitcommit setlocal spell spelllang=en_us,pt_br,de_de
autocmd BufRead,BufNewFile *.md setlocal spell spelllang=en_us,pt_br,de_de
autocmd BufRead,BufNewFile *.txt setlocal spell spelllang=en_us,pt_br,de_de

"===============================================================================
" Pluggins
"===============================================================================
call plug#begin('~/.vimplugged')

Plug 'rking/ag.vim'

" nnoremap g# :Ag! -w <C-R><C-W><space>
nnoremap <leader>ag :Ag!<space>
vnoremap <leader>ag y:Ag! '<C-R>"'
nnoremap <leader>lag :Ag<up><cr>
nnoremap <leader>ga :AgAdd!<space>
nnoremap <leader>g# :Ag! -w <C-R><C-W><space>
nnoremap <leader>gn :cnext<CR>
nnoremap <leader>gp :cprev<CR>
nnoremap <leader>gq :ccl<CR>
nnoremap <leader>gl :cwindow<CR>

Plug 'weierophinney/argumentrewrap'

nnoremap <leader>wa :call argumentrewrap#RewrapArguments()<CR>

Plug 'yukunlin/auto-pairs' " fixed 'jiangmiao/auto-pairs'

" TODO: test plugins http://web-techno.net/vim-php-ide/

Plug 'Lokaltog/vim-easymotion'
Plug 'airblade/vim-gitgutter'
Plug 'austintaylor/vim-commaobject'
Plug 'joonty/vdebug'
Plug 'kana/vim-textobj-user'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'

" Colors
" Plug 'chriskempson/base16-vim'
" Plug 'flazz/vim-colorschemes'
" Plug 'altercation/vim-colors-solarized'
Plug 'endel/vim-github-colorscheme'
Plug 'jonathanfilip/vim-lucius'
Plug 'chriskempson/base16-vim'
Plug 'nanotech/jellybeans.vim'
Plug 'mhartington/oceanic-next'

" templates
Plug 'slim-template/vim-slim'

" common files for vim and neovim
for f in split(glob('~/.vim/plugins/*.vim'), '\n')
  exe 'source' f
endfor

call plug#end()

source ~/.vim/functions.vim
source ~/.vim/abbreviations.vim
source ~/.vim/mappings.vim


"===============================================================================
" Appearence:
"===============================================================================
" colorscheme lucius

let base16colorspace=256
colorscheme base16-tomorrow-night
colorscheme OceanicNext
" colorscheme jellybeans
call FixColors()
hi Normal guibg=NONE ctermbg=NONE
hi Normal guibg=NONE ctermbg=NONE
hi EndOfBuffer guibg=NONE ctermbg=NONE


"===============================================================================
" Allow overriding these settings:
"===============================================================================
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif

if filereadable(".project.vim")
  source .project.vim
endif

if filereadable(".editor/project.vim")
  source .editor/project.vim
endif
